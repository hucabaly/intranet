{"version":3,"sources":["script.js"],"names":[],"mappingsfile":"script.js","sourcesContent":["jQuery(document).ready(function ($) {\n    /**\n     * update check/uncheck function unit\n     * @param {type} dom\n     * @returns {undefined}\n     */\n    function updateCheckFunction(dom)\n    {\n        var dataId = dom.data('id');\n        if (dom.is(':checked')) {\n            $('.team-group-function[data-id=' + dataId + ']').show();\n        } else {\n            $('.team-group-function[data-id=' + dataId + ']').hide();\n        }\n    }\n    //update checkbox is-function\n    $('input.input-is-function').each( function( i, v ) {\n        updateCheckFunction($(this));\n    });\n    $('input.input-is-function').on('change', function (event) {\n        updateCheckFunction($(this));\n    });\n    \n    /**\n     * add / remove team action\n     */\n    htmlAddTeamPositonOrigin = $('.group-team-position-orgin').html();\n    $('.group-team-position-orgin').remove();\n    dataIdLast = jQuery('.box-form-team-position').children('.group-team-position').length;\n    if (!dataIdLast) {\n        dataIdLast = 0;\n    } else {\n        dataIdLast = parseInt(dataIdLast);\n    }\n    if (dataIdLast == 1) {\n        $('.box-form-team-position .group-team-position .input-remove').addClass('warning-action');\n    }\n    $(document).on('click', '.input-team-position.input-add-new button', function(event) {\n        dataIdLast++;\n        htmlAddTeamPositon = $(htmlAddTeamPositonOrigin);\n        htmlAddTeamPositon.find('.input-team-position.input-team select').attr('name', 'team[' + dataIdLast + '][team]');\n        htmlAddTeamPositon.find('.input-team-position.input-position select').attr('name', 'team[' + dataIdLast + '][position]');\n        $('.box-form-team-position').append(htmlAddTeamPositon);\n        $('.box-form-team-position .group-team-position .input-remove').removeClass('warning-action');\n        \n        if ($('.box-form-team-position').children('.group-team-position').length == 1) {\n            $('.box-form-team-position .group-team-position .input-remove').addClass('warning-action');\n        }\n        $('input[name=employee_team_change]').val(1);\n    });\n    $(document).on('click', '.input-team-position.input-remove', function(event) {\n        teamLength = $('.box-form-team-position').children('.group-team-position').length;\n        if (teamLength > 1) {\n            $(this).parents('.group-team-position').remove();\n            $('input[name=employee_team_change]').val(1);\n        }\n        if (teamLength == 2) {\n            $('.box-form-team-position .group-team-position .input-remove').addClass('warning-action');\n        }\n    });\n    //change select, update team availabel\n    $(document).on('change', '.group-team-position select', function(e) {\n        $('input[name=employee_team_change]').val(1);\n    });\n    \n    /**\n     * update role label current\n     */\n    $('#employee-role-form').on('hide.bs.modal', function (e) {\n        htmlRoleList = '';\n        $(this).find('.checkbox input:checked').each(function (i,k) {\n            htmlRoleList += '<li><span>';\n            htmlRoleList += $(this).parent().text().trim();\n            htmlRoleList += '</li></span>';\n        });\n        $('ul.employee-roles').html(htmlRoleList);\n        $('input[name=employee_role_change]').val(1);\n    });\n    \n    /**\n     * padding table rule\n     */\n    lengthTrTableRule = $('.team-rule-wrapper table.table-team-rule tbody tr').length;\n    $('.team-rule-wrapper table.table-team-rule tbody tr:last-child .form-input-dropdown').addClass('input-rule-last');\n    $('.team-rule-wrapper table.table-team-rule tbody tr:nth-child(' + (lengthTrTableRule - 1) + ') .form-input-dropdown').addClass('input-rule-last');\n    var paddingTableRule = $('.team-rule-wrapper .table-responsive').css('padding-bottom');\n    $('.input-rule-last').on('show.bs.dropdown', function () {\n        $('.team-rule-wrapper .table-responsive').css('padding-bottom', '90px');\n    });\n    $('.input-rule-last').on('hide.bs.dropdown', function () {\n        $('.team-rule-wrapper .table-responsive').css('padding-bottom', paddingTableRule);\n    });\n});\n\n/**\n * team member skill\n */\n(function($){\n    $.fn.employeeSkillAction = function(option) {\n        \n        //align center for image\n        $('.employee-skill-modal').on('shown.bs.modal', function (e) {\n            idModal = $(this).attr('id');\n            if (idModal) {\n                idModal = '#' + idModal + ' ';\n            } else {\n                idModal = '';\n            }\n            $(this).find('.input-box-img-preview .skill-modal-image').verticalCenter({\n                parent: idModal + '.input-box-img-preview .skill-modal-image-preview'\n            });\n        });\n        \n        var autoComplete = {},\n            groupChange = {\n                schools: 0\n            },\n            dataGroup,\n            dataHrefModal,\n            dataItemId,\n            imagePreviewImageDefault,\n            employeeSkillNo = {},\n            tokenValue,\n            employeeSkill,\n            messageError,\n            labelFormat,\n            urlLoadAutoComplete;\n        \n        //init var\n        tokenValue = $('input[name=_token]').val();\n        autoComplete = option.autoComplete;\n        imagePreviewImageDefault = option.imagePreviewImageDefault;\n        employeeSkillNo = option.employeeSkillNo;\n        employeeSkill = option.employeeSkill;\n        messageError = option.messageError;\n        labelFormat = option.labelFormat;\n        urlLoadAutoComplete = option.urlLoadAutoComplete,\n        groupChange = option.groupChange;\n\n        //click button to show modal\n        $(document).on('click', '.employee-skill-box-wrapper [data-modal=true]', function(event) {\n            dataItemId = $(this).parents('.esbw-item').data('id');\n            if (!dataItemId || dataItemId == undefined) {\n                dataItemId = 0;\n            }\n            dataGroup = $(this).parents('.employee-skill-box-wrapper').data('group');\n            dataHrefModal = $(this).parents('.employee-skill-box-wrapper').data('href');\n            dataIsChange = $(this).parents('.employee-skill-box-wrapper').data('change');\n            $(dataHrefModal).modal('show');\n            if (! dataItemId) {\n                $(dataHrefModal).find('.btn-delete.btn-action').addClass('hidden');\n            } else {\n                $(dataHrefModal).find('.btn-delete.btn-action').removeClass('hidden');\n            }\n            //process data when show modal\n            $(dataHrefModal).on('shown.bs.modal', function (e) {\n                $(this).find('.input-skill-modal').removeAttr('disabled').val('');\n                $(this).find('img.college-image-preview').attr('src', imagePreviewImageDefault);\n                $(this).find('.input-skill-modal').each(function (i,k) {\n                    inputType = $(this).attr('type');\n                    dataCol = $(this).data('col');\n                    dataTbl = $(this).data('tbl');\n                    if (! dataCol || ! dataTbl) {\n                    } else {\n                        valueId = employeeSkill[dataGroup][dataItemId][dataTbl].id;\n                        value = employeeSkill[dataGroup][dataItemId][dataTbl][dataCol];\n                        if (inputType == 'file') {\n                            if ($(this).parents('.input-box-img-preview').length) {\n                                $(this).parents('.input-box-img-preview')\n                                    .find('img[data-tbl=' + dataTbl +'][data-col=' + dataCol +'_preview]')\n                                    .attr('src', value);\n                            }\n                            if (valueId) {\n                                if ($(this).hasClass('not-auto')) {\n                                    $(this).val('');\n                                } else {\n                                    $(this).attr('disabled', true).val('');\n                                }\n                            }\n                        } else {\n                            if (value && value != undefined) {\n                                value = $.parseHTML(value)[0].nodeValue;\n                            } else {\n                                value = '';\n                            }\n                            if (\n                                valueId && \n                                ! $(this).data('autocomplete') && \n                                $(this).attr('type') != 'hidden'\n                            ) {\n                                if ($(this).hasClass('not-auto')) {\n                                    $(this).val(value);\n                                } else {\n                                    $(this).attr('disabled', true).val(value);\n                                }\n                            } else {\n                                $(this).val(value);\n                            }\n                            if ($(this).is('select')) {\n                                $(this).val(value).trigger(\"change\");\n                            }\n                        }\n                    }\n                });\n                $(this).attr('data-id', dataItemId);\n            });\n        });\n        \n        /**\n        * update employee skill data\n         */\n        function updateEmployeeData(thisDomModal, imageReturnAjax, actionButton) {\n            if (! imageReturnAjax || imageReturnAjax == undefined) {\n                imageReturnAjax = null;\n            }\n            var id = thisDomModal.attr('data-id');\n            id = parseInt(id);\n            var group = thisDomModal.data('group');\n            groupChange[group] = 1;\n            // action delete skill\n            if (actionButton && actionButton == 'delete') {\n                delete employeeSkill[group][id];\n                $('input[name=employee_skill]').val($.param(employeeSkill));\n                $('input[name=employee_skill_change]').val($.param(groupChange));\n                return true;\n            }\n            \n            //action edit/add skill\n            if (! id) {\n                id = employeeSkillNo[group];\n                employeeSkillNo[group]++;\n            }\n            \n            //check same school\n            inputIdCheck = thisDomModal.find('input[data-col=id]');\n            flagCheckInputSame = false;\n            if (inputIdCheck.length && inputIdCheck.val()) {\n                dataTbl = inputIdCheck.data('tbl');\n                $.each(employeeSkill[group], function (i,k) {\n                    if (id == i) {\n                        return true;\n                    }\n                    if (k[dataTbl].id == inputIdCheck.val()) {\n                        flagCheckInputSame = true;\n                        return false;\n                    }\n                });\n            }\n            if (flagCheckInputSame) {\n                alert(messageError[\"same_\" + group]);\n                return true;\n            }\n            \n            thisDomModal.find('.input-skill-modal[data-tbl][data-col]').each(function (i,k) {\n                inputType = $(this).attr('type');\n                dataCol = $(this).data('col');\n                dataTbl = $(this).data('tbl');\n                if (! dataCol || ! dataTbl) {\n                } else {\n                    valueInput = $(this).val();\n                    if (employeeSkill[group][id] == undefined) {\n                        employeeSkill[group][id] = {};\n                    }\n                    if (employeeSkill[group][id][dataTbl] == undefined) {\n                        employeeSkill[group][id][dataTbl] = {};\n                    }\n                    if (employeeSkill[group][id][dataTbl][dataCol] == undefined) {\n                        employeeSkill[group][id][dataTbl][dataCol] = {};\n                    }\n                    \n                    if (inputType == 'file') {\n                        if ($(this).parents('.input-box-img-preview').length) {\n                            if (imageReturnAjax && imageReturnAjax.image && imageReturnAjax.image_path) {\n                                valueInput = imageReturnAjax.image;\n                                employeeSkill[group][id][dataTbl].image_path = imageReturnAjax.image_path;\n                            } else {\n                                valueInput = $(this).parents('.input-box-img-preview')\n                                    .find('img[data-tbl=' + dataTbl +'][data-col=' + dataCol +'_preview]')\n                                    .attr('src');\n                                employeeSkill[group][id][dataTbl].image_path = '';\n                            }\n                        }\n                    }\n                    employeeSkill[group][id][dataTbl][dataCol] = valueInput;\n                }\n            });\n            $('input[name=employee_skill]').val($.param(employeeSkill));\n            $('input[name=employee_skill_change]').val($.param(groupChange));\n        }\n        \n        /**\n        * upload skill html list\n         */\n        function updateHtmlSkillList(group)\n        {\n            skillListWrapper = $('.employee-skill-box-wrapper[data-group=' + group + '] .employee-skill-items');\n            skillListItem0 = skillListWrapper.find('.esbw-item[data-id=0]');\n            var htmlNew = '';\n            $.each(employeeSkill[group], function(i, k){\n                if (i == 0) {\n                    return true;\n                }\n                skillItemNew = skillListItem0.clone();\n                skillItemNew.attr('data-id', i);\n                skillItemNew.removeClass('hidden');\n                skillItemNew.find('[data-tbl][data-col]').each(function(){\n                    dataTbl = $(this).data('tbl');\n                    dataCol = $(this).data('col');\n                    if ($(this).is('img')) {                        \n                        skillItemNew.find('[data-tbl=' + dataTbl + '][data-col=' + dataCol + ']').attr('src', k[dataTbl][dataCol]);\n                    } else {\n                        valueInput = k[dataTbl][dataCol];\n                        domInput = skillItemNew.find('[data-tbl=' + dataTbl + '][data-col=' + dataCol + ']');\n                        dataDateFormat = domInput.data('date-format');\n                        dataLabelFormat = domInput.data('label-format');\n                        if (dataDateFormat) {\n                            date = new Date(valueInput);\n                            valueInput = getDateFormat(date, dataDateFormat);\n                        } else if (dataLabelFormat) {\n                            valueInput = labelFormat[dataLabelFormat][valueInput];\n                        }\n                        domInput.html(valueInput);\n                    }\n                });\n                htmlNew += skillItemNew[0].outerHTML;\n            });\n            skillListWrapper.children(':not(.esbw-item)').html(htmlNew);\n        }\n        \n        //process data when modal action change\n        $('.employee-skill-modal .btn-action.btn-add, .employee-skill-modal .btn-action.btn-edit').on('click', function(event) {\n            var thisDomModal = $(this).parents('.employee-skill-modal');\n            var dataGroupType = thisDomModal.data('group');\n            formDomModal = thisDomModal.find('form');\n            if (formDomModal.length) {\n                if (! formDomModal.valid()) {\n                    return true;\n                }\n            }\n            //upload if available\n            if (thisDomModal.find('input[type=file]').val()) {\n                formDom = thisDomModal.find('form.skill-modal-form');\n                formData = new FormData();\n                formData.append('_token', tokenValue);\n                formData.append('skill_type', dataGroupType);\n                formData.append('file', formDom.find('input[type=file]')[0].files[0]);\n                $.ajax({\n                    url : formDom.attr('action'),\n                    type : 'POST',\n                    data : formData,\n                    dataType: 'json',\n                    processData: false,\n                    contentType: false,\n                    success : function(data) {\n                        if (data.error != undefined && data.error) {\n                            alert(data.error);\n                        } else {\n                            updateEmployeeData(thisDomModal, data);\n                            updateHtmlSkillList(dataGroupType);\n                        }\n                        thisDomModal.modal('hide');\n                    }\n                });\n            } else {\n                updateEmployeeData(thisDomModal);\n                updateHtmlSkillList(dataGroupType);\n                thisDomModal.modal('hide');\n            }\n        });\n        //process data delete\n        $('.employee-skill-modal .btn-action.btn-delete').on('click', function(event) {\n            thisDomModal = $(this).parents('.employee-skill-modal');\n            dataGroupType = thisDomModal.data('group');\n            dataId = thisDomModal.attr('data-id');\n            dataId = parseInt(dataId);\n            if (dataId != 0) {\n                updateEmployeeData(thisDomModal, null, 'delete');\n                updateHtmlSkillList(dataGroupType);\n            }\n            thisDomModal.modal('hide');\n        });\n        \n        // remove pop up in modal when scroll\n        $('.employee-skill-modal').scroll(function(){\n            $('input').blur();\n        });\n        \n        //disable submti fomr modal\n        $('.employee-skill-modal form').on('submit', function(event) {\n            event.preventDefault();\n        });\n        \n        //process data when close modal\n        $('.employee-skill-modal').on('hidden.bs.modal', function(e) {\n            $(this).find('input').removeAttr('disabled').val('');\n            $(this).find('img[data-col=image_preview]').attr('src', imagePreviewImageDefault);\n        });\n        \n        /**\n         * init autocomplete field\n         */\n        function initAutocompleteModal() {\n            //autocomplete field in modal\n            $('.employee-skill-modal input[data-autocomplete=true]').each(function() {\n                var dataTblAuto = $(this).data('tbl');\n                if (autoComplete[dataTblAuto] == undefined || \n                    ! autoComplete[dataTblAuto]) {\n                    return true;\n                }\n                autoComplete[dataTblAuto] = JSON.parse(autoComplete[dataTblAuto]);\n                $(this).autocomplete({\n                    minLength: 0,\n                    source: autoComplete[dataTblAuto],\n                    select: function( event, ui ) {\n                        thisParent = $(this).parents('.employee-skill-modal');\n                        var uiItemSelected = ui.item;\n                        thisParent.find('.input-skill-modal[data-tbl=' + dataTblAuto + ']:not([data-autocomplete=true])').each(function (){\n                            if ($(this).hasClass('not-auto')) {\n                                return true;\n                            }\n                            inputType = $(this).attr('type');\n                            dataCol = $(this).data('col');\n                            if (! dataCol) {\n                            } else {\n                                value = uiItemSelected[dataCol];\n                                if (inputType == 'file') {\n                                    if ($(this).parents('.input-box-img-preview').length) {\n                                        $(this).parents('.input-box-img-preview')\n                                            .find('img[data-col=' + dataCol +'_preview]')\n                                            .attr('src', value);\n                                    }\n                                    $(this).attr('disabled', true).val('');\n                                } else {\n                                    if (value && value != undefined) {\n                                        value = $.parseHTML(value)[0].nodeValue;\n                                        $(this).attr('disabled', true).val(value);\n                                    } else {\n                                        $(this).attr('disabled', true).val('');\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }).focus(function(){\n                    $(this).autocomplete(\"search\");\n                });\n            });\n        }\n        \n        /**\n         * load autocomplete data throw ajax\n         */\n        function loadAjaxAutocomplete() {\n            $.ajax({\n                url: urlLoadAutoComplete,\n                type: 'POST',\n                data: {'_token': tokenValue},\n                dataType: 'json',\n                success: function(dataReturn) {\n                    autoComplete = dataReturn;\n                    initAutocompleteModal();\n                }\n            });\n        }\n        $(window).load(function() {\n            loadAjaxAutocomplete();\n        });\n        \n        //process data when key press autocomplete field\n        $('.employee-skill-modal input[data-autocomplete=true]').on('keyup', function(e) {\n            if (e.keyCode == 13) {\n            } else {\n                thisParent = $(this).parents('.employee-skill-modal');\n                var dataTblAuto = $(this).data('tbl');\n                thisParent.find('input[data-tbl=' + dataTblAuto + ']:not([data-autocomplete=true])').each(function (){\n                    inputType = $(this).attr('type');\n                    if (inputType == 'file') {\n                        $(this).removeAttr('disabled');\n                        return true;\n                    } else {\n                        if ($(this).hasClass('not-auto')) {\n                            $(this).removeAttr('disabled')\n                            return true;\n                        }\n                        if ($(this).data('col') == 'id') {\n                            $(this).removeAttr('disabled').val('');\n                            return true;\n                        }\n                        $(this).removeAttr('disabled');\n                        return true;\n                    }\n                });\n            }\n        });\n    };\n})(jQuery);"],"sourceRoot":"/source/"}